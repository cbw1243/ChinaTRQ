scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = seq(min(dat$price), max(dat$price), length.out = 10)) +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
length.out = 10)) +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = round(seq(min(dat$price),
max(dat$price),
length.out = 10))) +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = round(seq(min(dat$price),
max(dat$price),
length.out = 10), 1)) +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
theme_light() +
theme(legend.position = 'bottom')
?scale_x_date
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Time', y = 'Price')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Time', y = 'Price') +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price')) +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price') +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == 'rice') %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price') +
theme_light() +
theme(legend.position = 'bottom')
commosel <- 'rice'
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price',
title = paste0('Monthly price of ', commosel)) +
theme_light() +
theme(legend.position = 'bottom')
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price',
title = paste0('Figure. Monthly price of ', commosel, 'in China')) +
theme_light() +
theme(legend.position = 'bottom',
text = element_text(color = 'black', size = 10))
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price',
title = paste0('Figure. Monthly price of ', commosel, 'in China')) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price',
title = paste0('Figure. Monthly prices of ', commosel, ' in China')) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
?labs
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price',
title = paste0('Figure. Monthly prices of ', commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China.' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
server <- function(input, output) {
# Fill in the spot we created for a plot
output$pricePlot <- renderPlot({
commosel <- input$commosel
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price',
title = paste0('Figure. Monthly prices of ', commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
})
}
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = unique(dat$commo))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
shinyApp(ui, server)
server <- function(input, output) {
# Fill in the spot we created for a plot
output$pricePlot <- renderPlot({
commosel <- input$commosel
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price (Chinese yuan per kg)',
#title = paste0('Figure. Monthly prices of ', commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
})
}
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = unique(dat$commo))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
shinyApp(ui, server)
server <- function(input, output) {
# Fill in the spot we created for a plot
output$pricePlot <- renderPlot({
commosel <- input$commosel
dat %>%
filter(commo == commosel ) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price (Chinese yuan per kg)',
title = paste0('Figure. Monthly prices of ', commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
})
}
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
#titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = unique(dat$commo))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
shinyApp(ui, server)
rsconnect::deployApp('priceApp.r')
runApp()
deployApp()
runApp()
runApp('do.R')
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
runApp()
dat <- fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y')) %>%
group_by(commo, note) %>%
mutate(num = 1:n()) %>%
drop_na()
runApp()
setwd("~/Dropbox (Personal)/PubsGitHub/ChinaTRQ")
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
rm(list = ls())
shinyApp(ui, server)
setwd("~/Dropbox (Personal)/PubsGitHub/ChinaTRQ")
shinyApp(ui, server)
server <- function(input, output) {
plotData <- reactive({
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
})
# Fill in the spot we created for a plot
output$pricePlot <- renderPlot({
plotData()[[1]] %>%
filter(commo == commosel) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(dat$price), 1),
round(max(dat$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price (Chinese yuan per kg)',
title = paste0('Figure. Monthly prices of ', input$commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
})
}
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
#titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = unique(dat$commo))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
server <- function(input, output) {
plotData <- reactive({
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
})
# Fill in the spot we created for a plot
output$pricePlot <- renderPlot({
plotData()[[1]] %>%
filter(commo == commosel) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(plotData()[[1]]$price), 1),
round(max(plotData()[[1]]$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price (Chinese yuan per kg)',
title = paste0('Figure. Monthly prices of ', input$commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
})
}
shinyApp(ui, server)
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
#titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = unique(dat$commo))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
#titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = c('rice', 'wheat', 'maize'))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
shinyApp(ui, server)
plotData <- reactive({
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
})
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
commosel <- 'rice'
plotData <- reactive({
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
})
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
server <- function(input, output) {
plotData <- reactive({
fread('china_month_price_moa_update.csv') %>%
mutate(time = as.Date(time, format = '%m/%d/%Y'))  %>%
filter(commo == input$commosel)
})
# Fill in the spot we created for a plot
output$pricePlot <- renderPlot({
plotData() %>%
filter(commo == commosel) %>%
ggplot(data = . ) +
geom_line(aes(time, price, col = note, group = note)) +
scale_color_manual(values = c('red', 'deepskyblue4'),
labels = c('Domestic price', 'International price'),
name = '') +
scale_y_continuous(breaks = seq(round(min(plotData()$price), 1),
round(max(plotData()$price), 1),
by = 0.1)) +
scale_x_date(date_breaks = '6 months', date_labels = '%Y/%m') +
labs(x = 'Year / Month', y = 'Price (Chinese yuan per kg)',
title = paste0('Figure. Monthly prices of ', input$commosel, ' in China'),
caption = 'Data source: Ministry of Agriculture of China' ) +
theme_light() +
theme(legend.position = 'bottom',
axis.text = element_text(color = 'black', size = 10))
})
}
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
#titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = c('rice', 'wheat', 'maize'))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
shinyApp(ui, server)
fluidPage(
# Give the page a title
#titlePanel("Monthly price of grain commodities in China"),
sidebarPanel(
selectInput("commosel", "Commodity:",
choices = c('rice', 'wheat', 'maize'))
#    hr(),
#    helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("pricePlot")
)
)
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
